name: Publish apispec

on:
  workflow_call:
    secrets:
      NPM_AUTH_TOKEN:
        required: true
      DOCKER_REGISTRY_USER:
        required: true
      DOCKER_REGISTRY_PASSWORD:
        required: true
    inputs:
      image:
        type: string
        required: false
        default: europe-docker.pkg.dev/ftcs-production/infrastructure/node-build-tools:16
      npm_config_nodedir:
        description: Path to node source code so that npm can compile native modules
        type: string
        required: false
      only_verify:
        required: false
        type: boolean
        default: false

jobs:
  apispec:
    name: Publish apispec
    runs-on: [self-hosted, common]
    container:
      image: ${{ inputs.image }}
      credentials:
        username: ${{ secrets.DOCKER_REGISTRY_USER }}
        password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: 'Workaround permissions issue'
        run: chown $(whoami):$(whoami) -R .

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            apispec:
              - "**/apispec.json"

      - name: Add NPM token
        if: steps.changes.outputs.apispec == 'true'
        run: npm config set '//npm.intergiro.tech/:_authToken' ${NPM_AUTH_TOKEN}
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Verify publishing
        if: steps.changes.outputs.apispec == 'true'
        run: |
          npx -y --package=@general/apispec-manager@latest -c 'apispecman publish --token ${{ secrets.NPM_AUTH_TOKEN }} --dry-run'
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
          npm_config_nodedir: ${{ inputs.npm_config_nodedir }}

      - name: Publish apispec
        if: ${{ ! inputs.only_verify }}
        run: |
          npx -y --package=@general/apispec-manager@latest -c 'apispecman publish --token ${{ secrets.NPM_AUTH_TOKEN }}'
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
          npm_config_nodedir: ${{ inputs.npm_config_nodedir }}
